def config = [
        compileSdkVersion: 28,
        buildToolsVersion: 28,
        minSdkVersion    : 23,
        targetSdkVersion : 28,
        versionCode      : 1,
        versionName      : "1.0"
]
ext.config = config

ext.deps = [:]

def versions = [
        kotlin           : "1.3.21",
        gradle           : "3.3.0",
        appcompat        : "1.0.0-rc02",
        ktx              : "1.0.0-rc02",
        constraintlayout : "2.0.0-alpha3",
        test             : "1.1.0-alpha4",
        espresso         : "3.1.0-alpha4",
        androidJunit5    : "1.2.0.0",
        junit5           : "5.2.0",
        spek             : "2.0.0-alpha.2",
        rxKotlin         : "2.3.0",
        rxAndroid        : "2.1.0",
        androidX         : "2.0.0-beta01",
        mocktioKotlin    : "2.0.0-RC2",
        retrofit         : "2.4.0",
        okHttp           : "3.11.0",
        iconicsCore      : "3.1.0",
        fontawesome      : "5.3.1.1",
        databinding      : "3.3.1",
        fabric           : "1.27.1",
        crashlytics      : "2.9.9@aar",
        retrofit2        : "2.5.0",
        coroutinesAdapter: "0.9.2",
        koin             : "2.0.0-beta-1",
        okhttp3          : "3.9.1",
        kotlinTest       : "3.3.0",
        coroutine        : "1.1.1"
]

def kotlin = [
        gradlePlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
        stdlibJdk8  : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
        reflect     : "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
]
deps.kotlin = kotlin

def coroutine = [
        core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine",
        android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
]
deps.coroutine = coroutine

def build = [
        gradle: "com.android.tools.build:gradle:$versions.gradle"
]
deps.build = build

def androidx = [
        appcompat       : "androidx.appcompat:appcompat:$versions.appcompat",
        ktx             : "androidx.core:core-ktx:$versions.ktx",
        constraintlayout: "androidx.constraintlayout:constraintlayout:$versions.constraintlayout",
        recyclerview    : "androidx.recyclerview:recyclerview:$versions.appcompat",

        test            : [
                runner  : "androidx.test:runner:$versions.test",
                espresso: "androidx.test.espresso:espresso-core:$versions.espresso",
                rule    : "androidx.test:rules:$versions.test",
                arch    : "androidx.arch.core:core-testing:$versions.androidX"
        ]
]
deps.androidx = androidx

def lifecycle = [
        compiler       : "androidx.lifecycle:lifecycle-compiler:$versions.androidX",
        extensions     : "androidx.lifecycle:lifecycle-extensions:$versions.androidX",
        reactivestreams: "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.androidX",
]
deps.lifecycle = lifecycle

def rx = [
        kotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
        android: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
]
deps.rx = rx

def unitTest = [
        mocktio : "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mocktioKotlin"
]
deps.unitTest = unitTest


def iconics = [
        core       : "com.mikepenz:iconics-core:$versions.iconicsCore",
        views      : "com.mikepenz:iconics-views:$versions.iconicsCore",
        fontawesome: "com.mikepenz:fontawesome-typeface:$versions.fontawesome",
]
deps.iconics = iconics

def fabric = [
        gradle     : "io.fabric.tools:gradle:$versions.fabric",
        crashlytics: "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"
]
deps.fabric = fabric

def retrofit2 = [
        retrofit         : "com.squareup.retrofit2:retrofit:$versions.retrofit2",
        coroutinesAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.coroutinesAdapter",
        gsonConvertor    : "com.squareup.retrofit2:converter-gson:$versions.retrofit2"
]
deps.retrofit2 = retrofit2

def koin = [
        core     : "org.koin:koin-core:$versions.koin",
        android  : "org.koin:koin-android:$versions.koin",
        scope    : "org.koin:koin-androidx-scope:$versions.koin",
        viewmodel: "org.koin:koin-androidx-viewmodel:$versions.koin",
        test     : "org.koin:koin-test:$versions.koin"
]
deps.koin = koin

def okhttp3 = [
        okhttp : "com.squareup.okhttp3:okhttp:$versions.okhttp3",
        logging: "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
]
deps.okhttp3 = okhttp3

def kotlinTest = [
        runner: "io.kotlintest:kotlintest-runner-junit5:$versions.kotlinTest"
]
deps.kotlinTest = kotlinTest

static def addRepositories(RepositoryHandler repositoryHandler) {
    repositoryHandler.google()
    repositoryHandler.jcenter()
    repositoryHandler.maven {
        url "https://dl.bintray.com/spekframework/spek-dev"
    }
    repositoryHandler.maven {
        url 'https://maven.fabric.io/public'
    }
    repositoryHandler.mavenCentral()
}

ext.addRepositories = this.&addRepositories
